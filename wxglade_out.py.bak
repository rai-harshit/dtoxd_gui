#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.9.3 on Fri Jun 14 09:45:55 2019
#

import wx
from watch import start_watching, report_updater
from threading import Thread
import watcher_config
from time import sleep
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.BORDER_SIMPLE | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.STAY_ON_TOP | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((720, 420))
        self.list_ctrl_1 = wx.ListCtrl(self, wx.ID_ANY, style=wx.BORDER_DEFAULT | wx.BORDER_SIMPLE | wx.LC_ALIGN_LEFT | wx.LC_HRULES | wx.LC_LIST | wx.LC_SINGLE_SEL)
        self.button_8 = wx.Button(self, wx.ID_ANY, "Run Watcher")
        self.list_ctrl_2 = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_LIST | wx.LC_NO_HEADER | wx.LC_VRULES)
        # self.list_ctrl_2 = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_NO_HEADER | wx.LC_VRULES)
        self.button_1 = wx.Button(self, wx.ID_ANY, "Add New Directory")
        self.button_2 = wx.Button(self, wx.ID_ANY, "Remove Directory")
        self.button_3 = wx.Button(self, wx.ID_ANY, "Generate Report")
        self.button_4 = wx.Button(self, wx.ID_ANY, "Clear Report")
        self.button_7 = wx.Button(self, wx.ID_ANY, "OK\n")
        self.button_6 = wx.Button(self, wx.ID_ANY, "Cancel\n")
        self.button_5 = wx.Button(self, wx.ID_ANY, "Apply\n")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.run_watcher, self.button_8)
        self.Bind(wx.EVT_BUTTON, self.add_new_directory, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.remove_directory, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.generate_report, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_report, self.button_4)
        self.Bind(wx.EVT_BUTTON, self.save_and_exit, self.button_7)
        self.Bind(wx.EVT_BUTTON, self.exit, self.button_6)
        self.Bind(wx.EVT_BUTTON, self.save, self.button_5)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("dtoxd (The Directory Watcher)")
        self.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.SetFont(wx.Font(13, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, "Calibri"))
        self.list_ctrl_1.SetMinSize((220, 250))
        self.list_ctrl_1.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_8.SetMinSize((125, 26))
        self.button_8.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.list_ctrl_2.SetMinSize((220, 250))
        self.list_ctrl_2.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_1.SetMinSize((125, 26))
        self.button_1.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_2.SetMinSize((125, 26))
        self.button_2.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_3.SetMinSize((125, 26))
        self.button_3.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_4.SetMinSize((125, 26))
        self.button_4.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.button_7.SetMinSize((85, 26))
        self.button_6.SetMinSize((85, 26))
        self.button_5.SetMinSize((85, 26))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(9, 9, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        label_1 = wx.StaticText(self, wx.ID_ANY, "The Directory Watcher")
        grid_sizer_1.Add(label_1, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        label_2 = wx.StaticText(self, wx.ID_ANY, "Watcher's Directory List")
        label_2.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        grid_sizer_1.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 20)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        label_3 = wx.StaticText(self, wx.ID_ANY, "Watcher's Report")
        label_3.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        grid_sizer_1.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.list_ctrl_1, 1, wx.LEFT, 20)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_8, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.list_ctrl_2, 1, wx.LEFT, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_2, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER | wx.ALL, 11)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_7, 0, wx.ALIGN_CENTER | wx.RIGHT, 95)
        grid_sizer_1.Add(self.button_6, 0, wx.ALIGN_CENTER | wx.RIGHT, 65)
        grid_sizer_1.Add(self.button_5, 0, wx.ALIGN_CENTER | wx.RIGHT, 35)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def run_watcher(self, event):
    	path_count = self.list_ctrl_1.GetItemCount()
    	paths = []
    	for i in range(path_count):
    		paths.append(self.list_ctrl_1.GetItem(i).GetText())
    	watcher_thread = Thread(target=start_watching, args=(paths,), daemon=True, name="watcher_thread")
    	report_updater_thread = Thread(target=report_updater, args=("C:\\Users\\g_host\\Desktop\\dtoxd_GUI_dir",), daemon=True, name="report_updater_thread")
    	update_list_thread = Thread(target=self.update_report_list, daemon=True, name="update_list_thread")
    	watcher_thread.start()
    	report_updater_thread.start()
    	update_list_thread.start()

    def update_report_list(self):
    	reported_files = []
    	i = 0
    	old_paths = open("modified_paths.log","r")
    	for path in old_paths:
    		self.list_ctrl_2.InsertItem(0,path)
    	while watcher_config.stop_watcher is not True:
    		if watcher_config.report_update_available is True:
    			mod_paths = open("modified_paths.log","r")
    			if watcher_config.current_line == 0:
	    			for path in mod_paths:
	    				self.list_ctrl_2.InsertItem(0,path)
	    				watcher_config.current_line+=1 
	    		else:
	    			for path in mod_paths:
	    				if i < watcher_config.current_line:
	    					i+=1
	    					continue
	    				else:
	    					self.list_ctrl_2.InsertItem(0,path)
	    	watcher_config.report_update_available = False
	    	sleep(5)

    def add_new_directory(self, event):
      # wxGlade: MyFrame.<event_handler>
        items = []
        dlg = wx.DirDialog(self, "Choose input directory", "",wx.DD_DEFAULT_STYLE)
        dlg.ShowModal()
        selected_path = dlg.GetPath()
        if selected_path != "":
        	path_count = self.list_ctrl_1.GetItemCount()
        	for i in range(path_count):
        		items.append(self.list_ctrl_1.GetItem(i).GetText())
        	if selected_path not in items:
	        	self.list_ctrl_1.InsertItem(0,selected_path)
	        else:
	        	wx.MessageBox("Path already exists in the Watcher's List.", "Attention !" ,wx.OK | wx.ICON_INFORMATION)

    def remove_directory(self, event):  # wxGlade: MyFrame.<event_handler>
    	path_count = self.list_ctrl_1.GetItemCount()
    	if path_count == 0:
    		wx.MessageBox("Nothing to remove as the Watcher's List is empty.", "Attention !" ,wx.OK | wx.ICON_INFORMATION)
    	else:
	    	selected_path = self.list_ctrl_1.GetFocusedItem()
	    	if selected_path is -1:
	    		wx.MessageBox("Please select a directory from the Watcher's List and try again.", "Attention !" ,wx.OK | wx.ICON_INFORMATION)
	    	else:
		    	del_item = self.list_ctrl_1.DeleteItem(selected_path)
        # event.Skip()

    def update_list(self):
    	pass


    def generate_report(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'generate_report' not implemented!")
        event.Skip()

    def clear_report(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'clear_report' not implemented!")
        event.Skip()

    def save_and_exit(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'save_and_exit' not implemented!")
        event.Skip()

    def exit(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'exit' not implemented!")
        event.Skip()

    def save(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'save' not implemented!")
        event.Skip()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
