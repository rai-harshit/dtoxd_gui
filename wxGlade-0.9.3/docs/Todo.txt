
User Interface:
 * better icons for GridSizers and grid sizer slots (3x3)
 * multiple selections in Tree window -> allow editing properties for multiple widgets at the same time
 * support events from the base classes and the addition of any event as text (-> rev. 1.0)
 * implement undo/re-do; use this for GUI scripting (testing)
 * better avoid overlapping / invisible design window; maybe do the same for the main windows
 * code properties: use stc and resize dynamically (-> rev. 1.0)
 * toolbar and maybe menu editor: add Drop target for images (-> rev. 1.0)
 * grid properties: implement validation in 'on_cell_changing'
 * Frame, Notebook, Calendar: re-create on style change, depending on changed flags and platform
   e.g. on MacOS and GTK the main Frame styles can't be modified (see patch_recreate.txt)
 * add a template manager for (custom) widgets or complete parts of a design?
 * remove config.preferences.show_progress and always show ProgressDialog
done:
 * Notebook: add context menu entries 'add page' / 'remove page'
 * Splitter: ask user whether to add panels
 * flush properties before saving
 * implement "re-do / Ctrl-Y" and "repeat / Ctrl-R" to apply last property modification(s) to currently selected widget
 * new dialog for Toolbar (similar to the new menu dialog)
 * ask user whether he really wants a standalone menu/toolbar
 * remember preview window position; place it away from Design window
 * use Freeze/Thaw on updates
 * grid property editors: support clipboard
probably not:
 * change the user interface towards ribbons, property grid and a single frame instead of separate windows?
 * alternatively, use WrapSizer for the Palette window (-> rev. 0.9)


Code generation:
 * improve readability of the generated code (-> rev. 1.0)
 * better integrate automatic and user generated code (-> rev. 1.0)
 * Code (property): read user code from file?
done:
 * option to switch off code generation random facts like: "# generated by wxGlade 0.6.8"
 * option to remove all the BEGIN/END wxGlade comments in the generated code (only with overwrite True)
 * refactor code generation (direct generation instead of XML parser)
 * support ID-less menus also in C++ (i.e. without explicitely defining an ID)
 * Code property: split into global, local/private and post-init
 * Python: allow lambda functions as event handlers
probably not:
 * add a preview tab for the generated code? (-> no)


File Format:
 * add file format revision?
done:
 * get rid of obsolete options -> convert when opening file


Internal:
 * separate items and tree
 * use a structure of EditBase instances as main data structure; use tree only for the representation
   then remove workaround changeset 2840 (9c2a9ce615f7) again
 * move Tree.names[tplevel_node] to the toplevel items
 * attributes for all elements (upper or lower case?): IS_ROOT, IS_SIZER, IS_VIRTUAL, IS_GRIDBAG, IS_SLOT,
   IS_TOPLEVEL, IS_TOPLEVEL_WINDOW, CAN_PREVIEW?, WX_CLASS?
 * use consistent names? e.g.:
    node: tree nodes
    item: EditBase instances; with parent and children[...] attributes
    widget: actual wx Widgets
  * use .children for all, including a sizer
    use .virtual_sizer for e.g. Splitter and Notebook, but keep the actual children in .children
 * use the History instead of the logging facilities
done:
 * refactor edit_sizers and ManagedBase
 * refactor Property handling


Use either gettext or wx.GetTranslation for _


Widgets:
done:
 * Panel: use ScrolledWindow only when "Scrolled" is checked

Additional Widgets:
 * lib.buttons (feature request #45 Add support for generic buttons) (-> rev. 1.0)
 * stc.StyledTextCtrl
 * MediaCtrl?
 * ColourPickerCtrl, FontPickerCtrl?
 * FilePickerCtrl, DirPickerCtrl?
 * Simplebook, Choicebook
 * ListBook, CheckListBox?
 * FoldPanelBar, AGWInfoBar?
 * LedBarGraph?
done:
 * GridBagSizer
 * WrapSizer
 * SpinCtrlDouble
 * SearchCtrl
probably not:
 * StdDialogButtonSizer
 * Ribbons
 * matplotlib (example is supplied already)
 * Py (shell) (example is supplied already)
 * html2 (example is supplied already)



Bitmaps:
 * better user interface (popup dialog?)
done:
 * better property editor; DropTarget
 * application options for relative paths, resource files, installer etc.
   (There's now an example in the documentation.)


Widget properties etc.:
 * RadioBox: tooltips per button
done:
 * StaticText: Wrap
 * Splitter: SashGravity
 * ListCtrl properties: rows, cols
 * Grid rows property
 * Grid col resizing in design window
 * better dialog code


Development process:
 * move to GitHub


don't fix:
 * static text: change Widget->Align left, Layout->Expand -> with border
   -> re-create required on style change
